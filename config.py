"""
智能文档问答系统配置文件
包含应用的所有配置参数和常量定义

Author: AI Assistant
Version: 2.0.0
"""

import os
from dotenv import load_dotenv

# 加载环境变量文件
load_dotenv()

# =============================================================================
# API配置
# =============================================================================

# 千问API密钥（从环境变量获取）
API_KEY = os.getenv("QWEN_API_KEY", "your-api-key-here")

# =============================================================================
# 应用配置
# =============================================================================

APP_CONFIG = {
    # 应用基本信息
    "title": "智能文档问答助手",
    "description": "基于千问大模型的智能文档搜索和问答应用",
    "version": "2.0.0",
    
    # 服务器配置
    "host": "0.0.0.0",
    "port": 8000,
    
    # 目录配置
    "docs_folder": "data",                   # 文档存放文件夹
    "templates_dir": "templates",        # HTML模板目录
    "static_dir": "static",             # 静态文件目录
    
    # 文件配置
    "results_file": "search_results.json",  # 搜索结果保存文件
    "log_file": "app.log",                  # 日志文件
}

# =============================================================================
# 搜索配置
# =============================================================================

SEARCH_CONFIG = {
    # 搜索结果配置
    "max_results": 10,              # 最大搜索结果数量
    "max_workers": 4,               # 并行处理文件的最大工作线程数
    
    # 缓存配置
    "cache_size": 100,              # LRU缓存大小
    "enable_cache": True,           # 是否启用缓存
    
    # 文档处理配置
    "min_content_length": 10,       # 最小内容长度
    "max_content_length": 5000,     # 最大内容长度
    
    # 相似度计算配置
    "similarity_threshold": 0.1,    # 相似度阈值
    
    # 上下文抓取配置
    "enhanced_context": True,       # 是否启用增强上下文模式
    "context_range": 2,             # 相邻段落上下文范围
    "max_context_search": 20,       # 向上搜索上下文的最大段落数
}

# =============================================================================
# 停用词配置
# =============================================================================

# 中文停用词集合
STOPWORDS = set([
    # 常见停用词
    '的', '了', '和', '是', '在', '就', '都', '而', '及', '与', '着', '或',
    '一个', '没有', '我们', '你们', '他们', '可以', '不能', '需要', '进行',
    '通过', '如果', '请', '对', '为', '等', '其', '被', '并', '将', '要',
    
    # 数量词和代词
    '这', '那', '这个', '那个', '这些', '那些', '什么', '怎么', '为什么',
    '多少', '哪里', '哪个', '怎样', '如何', '是否',
    
    # 语气词和助词
    '吗', '呢', '吧', '啊', '呀', '哦', '嗯', '好的', '谢谢',
    
    # 时间词
    '今天', '昨天', '明天', '现在', '以前', '以后', '最近', '当前',
    
    # 常见动词
    '有', '会', '能', '想', '说', '做', '去', '来', '给', '看', '用',
])

# =============================================================================
# AI模型配置
# =============================================================================

MODEL_CONFIG = {
    # 默认模型配置
    "model": "qwen-plus",           # 使用的模型名称
    "temperature": 0.3,             # 控制输出随机性，0.0-1.0，值越低越确定
    "max_tokens": 3000,             # 最大输出token数
    "top_p": 0.8,                  # 核采样参数，控制输出多样性
    "result_format": "message",     # 返回格式
    
    # 流式输出配置
    "stream": True,                 # 是否启用流式输出
    "chunk_delay": 0.01,           # 流式输出块之间的延迟（秒）
    
    # 重试配置
    "max_retries": 3,              # 最大重试次数
    "retry_delay": 1.0,            # 重试间隔（秒）
}

# =============================================================================
# WebSocket配置
# =============================================================================

WEBSOCKET_CONFIG = {
    # 连接配置
    "max_connections": 100,         # 最大并发连接数
    "heartbeat_interval": 30,       # 心跳间隔（秒）
    "connection_timeout": 300,      # 连接超时时间（秒）
    
    # 消息配置
    "max_message_size": 1024 * 1024,  # 最大消息大小（1MB）
    "send_timeout": 10,             # 发送超时时间（秒）
}

# =============================================================================
# 日志配置
# =============================================================================

LOGGING_CONFIG = {
    # 日志级别
    "level": "INFO",                # 日志级别：DEBUG, INFO, WARNING, ERROR, CRITICAL
    
    # 日志格式
    "format": "%(asctime)s - %(name)s - %(levelname)s - %(message)s",
    "date_format": "%Y-%m-%d %H:%M:%S",
    
    # 日志文件配置
    "file_enabled": True,           # 是否启用文件日志
    "file_max_size": 10 * 1024 * 1024,  # 日志文件最大大小（10MB）
    "file_backup_count": 5,         # 保留的日志文件数量
    
    # 控制台日志配置
    "console_enabled": True,        # 是否启用控制台日志
}

# =============================================================================
# 性能配置
# =============================================================================

PERFORMANCE_CONFIG = {
    # 文档处理性能
    "file_processing_timeout": 30,     # 单个文件处理超时时间（秒）
    "batch_processing_size": 50,       # 批处理大小
    
    # 内存管理
    "max_memory_usage": 512 * 1024 * 1024,  # 最大内存使用量（512MB）
    "gc_threshold": 100,                     # 垃圾回收阈值
    
    # 并发控制
    "max_concurrent_requests": 10,      # 最大并发请求数
    "request_timeout": 120,             # 请求超时时间（秒）
}

# =============================================================================
# 安全配置
# =============================================================================

SECURITY_CONFIG = {
    # CORS配置
    "allow_origins": ["*"],         # 允许的源域名
    "allow_methods": ["GET", "POST", "PUT", "DELETE"],  # 允许的HTTP方法
    "allow_headers": ["*"],         # 允许的请求头
    
    # 速率限制
    "rate_limit_enabled": False,    # 是否启用速率限制
    "requests_per_minute": 60,      # 每分钟最大请求数
    
    # 输入验证
    "max_question_length": 1000,    # 问题最大长度
    "min_question_length": 1,       # 问题最小长度
}

# =============================================================================
# 开发配置
# =============================================================================

DEV_CONFIG = {
    # 调试配置
    "debug": False,                 # 是否启用调试模式
    "auto_reload": False,           # 是否启用自动重载
    
    # 测试配置
    "test_mode": False,             # 是否为测试模式
    "mock_ai_response": False,      # 是否模拟AI响应
}

# =============================================================================
# 验证配置的完整性
# =============================================================================

def validate_config():
    """验证配置的完整性和有效性"""
    errors = []
    
    # 检查必要的目录
    if not os.path.exists(APP_CONFIG["docs_folder"]):
        errors.append(f"文档文件夹不存在: {APP_CONFIG['docs_folder']}")
    
    # 检查端口范围
    if not (1 <= APP_CONFIG["port"] <= 65535):
        errors.append(f"端口号无效: {APP_CONFIG['port']}")
    
    # 检查数值配置
    if SEARCH_CONFIG["max_results"] <= 0:
        errors.append("max_results 必须大于 0")
    
    if MODEL_CONFIG["temperature"] < 0 or MODEL_CONFIG["temperature"] > 1:
        errors.append("temperature 必须在 0.0 到 1.0 之间")
    
    return errors


# 导出常用配置
__all__ = [
    'API_KEY', 'APP_CONFIG', 'SEARCH_CONFIG', 'STOPWORDS', 
    'MODEL_CONFIG', 'WEBSOCKET_CONFIG', 'LOGGING_CONFIG',
    'PERFORMANCE_CONFIG', 'SECURITY_CONFIG', 'DEV_CONFIG',
    'validate_config'
] 